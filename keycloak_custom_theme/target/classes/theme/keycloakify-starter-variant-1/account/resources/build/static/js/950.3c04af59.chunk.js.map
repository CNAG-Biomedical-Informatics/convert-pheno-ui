{"version":3,"file":"static/js/950.3c04af59.chunk.js","mappings":"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","sources":["keycloak-theme/account/pages/Password.tsx","../node_modules/keycloakify/src/account/lib/useGetClassName.ts","../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/account/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/account/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function LogoutConfirm(props: PageProps<Extract<KcContext, { pageId: \"password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        \"classes\": {\n            ...classes,\n            \"kcBodyClass\": clsx(classes?.kcBodyClass, \"password\")\n        }\n    });\n\n    const { url, password, account, stateChecker } = kcContext;\n\n    const { msg } = i18n;\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} active=\"password\">\n            <div className=\"row\">\n                <div className=\"col-md-10\">\n                    <h2>{msg(\"changePasswordHtmlTitle\")}</h2>\n                </div>\n                <div className=\"col-md-2 subtitle\">\n                    <span className=\"subtitle\">{msg(\"allFieldsRequired\")}</span>\n                </div>\n            </div>\n\n            <form action={url.passwordUrl} className=\"form-horizontal\" method=\"post\">\n                <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={account.username ?? \"\"}\n                    autoComplete=\"username\"\n                    readOnly\n                    style={{ \"display\": \"none\" }}\n                />\n\n                {password.passwordSet && (\n                    <div className=\"form-group\">\n                        <div className=\"col-sm-2 col-md-2\">\n                            <label htmlFor=\"password\" className=\"control-label\">\n                                {msg(\"password\")}\n                            </label>\n                        </div>\n\n                        <div className=\"col-sm-10 col-md-10\">\n                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" autoFocus autoComplete=\"current-password\" />\n                        </div>\n                    </div>\n                )}\n\n                <input type=\"hidden\" id=\"stateChecker\" name=\"stateChecker\" value={stateChecker} />\n\n                <div className=\"form-group\">\n                    <div className=\"col-sm-2 col-md-2\">\n                        <label htmlFor=\"password-new\" className=\"control-label\">\n                            {msg(\"passwordNew\")}\n                        </label>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-10\">\n                        <input type=\"password\" className=\"form-control\" id=\"password-new\" name=\"password-new\" autoComplete=\"new-password\" />\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"col-sm-2 col-md-2\">\n                        <label htmlFor=\"password-confirm\" className=\"control-label two-lines\">\n                            {msg(\"passwordConfirm\")}\n                        </label>\n                    </div>\n\n                    <div className=\"col-sm-10 col-md-10\">\n                        <input type=\"password\" className=\"form-control\" id=\"password-confirm\" name=\"password-confirm\" autoComplete=\"new-password\" />\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <div id=\"kc-form-buttons\" className=\"col-md-offset-2 col-md-10 submit\">\n                        <div>\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                name=\"submitAction\"\n                                value=\"Save\"\n                            >\n                                {msg(\"doSave\")}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/account/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcHtmlClass\": undefined,\n        \"kcBodyClass\": undefined,\n        \"kcButtonClass\": \"btn\",\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonDefaultClass\": \"btn-default\"\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["LogoutConfirm","props","_account$username","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","_objectSpread","clsx","kcBodyClass","url","password","account","stateChecker","msg","_jsxs","active","children","className","_jsx","action","passwordUrl","method","type","id","name","value","username","autoComplete","readOnly","style","passwordSet","htmlFor","autoFocus","createUseClassName","undefined","params","defaultClasses","useConstCallback","classKey","len","arguments","length","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","typeGuard","_toPropertyKey","key","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","_value","isMatched"],"sourceRoot":""}