{"version":3,"file":"static/js/2514.0be219a4.chunk.js","mappings":"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","sources":["keycloak-theme/login/i18n.ts","keycloak-theme/login/pages/UpdateUserProfile.tsx","keycloak-theme/login/KcApp.tsx"],"sourcesContent":["import { createUseI18n } from \"keycloakify/login\";\n\nexport const { useI18n } = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    en: {\n        alphanumericalCharsOnly: \"Only alphanumerical characters\",\n        gender: \"Gender\",\n        // Here we overwrite the default english value for the message \"doForgotPassword\"\n        // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n        doForgotPassword: \"I forgot my password\",\n        invalidUserMessage: \"Invalid username or password. (this message was overwrite in the theme)\"\n    },\n    fr: {\n        /* spell-checker: disable */\n        alphanumericalCharsOnly: \"Caractère alphanumérique uniquement\",\n        gender: \"Genre\",\n        doForgotPassword: \"J'ai oublié mon mot de passe\",\n        invalidUserMessage: \"Nom d'utilisateur ou mot de passe invalide. (ce message a été écrasé dans le thème)\"\n        /* spell-checker: enable */\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { UserProfileFormFields } from \"keycloakify/login/pages/shared/UserProfileFormFields\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function UpdateUserProfile(\n  props: PageProps<\n    Extract<KcContext, { pageId: \"update-user-profile.ftl\" }>,\n    I18n\n  >\n) {\n  const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n  const { getClassName } = useGetClassName({\n    doUseDefaultCss,\n    classes,\n  });\n\n  const { msg, msgStr } = i18n;\n\n  const { url, isAppInitiatedAction } = kcContext;\n\n  const [isFomSubmittable, setIsFomSubmittable] = useState(false);\n\n  console.log(\"UpdateUserProfile\", {\n    kcContext,\n    i18n,\n    doUseDefaultCss,\n    classes,\n  });\n\n  const profileAttributesWithoutEmail = kcContext.profile.attributes.filter(\n    (obj) => obj.name !== \"email\"\n  );\n\n  console.log(\"UpdateUserProfile\", {\n    profileAttributesWithoutEmail,\n  });\n  kcContext.profile.attributes = profileAttributesWithoutEmail;\n  delete kcContext.profile.attributesByName.email;\n\n  console.log(\"New kcContext UpdateUserProfile\", {\n    kcContext,\n  });\n\n  return (\n    <Template\n      {...{ kcContext, i18n, doUseDefaultCss, classes }}\n      headerNode={msg(\"loginProfileTitle\")}\n    >\n      <form\n        id=\"kc-update-profile-form\"\n        className={getClassName(\"kcFormClass\")}\n        action={url.loginAction}\n        method=\"post\"\n      >\n        <UserProfileFormFields\n          kcContext={kcContext}\n          onIsFormSubmittableValueChange={setIsFomSubmittable}\n          i18n={i18n}\n          getClassName={getClassName}\n        />\n\n        <div className={getClassName(\"kcFormGroupClass\")}>\n          <div\n            id=\"kc-form-options\"\n            className={getClassName(\"kcFormOptionsClass\")}\n          >\n            <div className={getClassName(\"kcFormOptionsWrapperClass\")}></div>\n          </div>\n\n          <div\n            id=\"kc-form-buttons\"\n            className={getClassName(\"kcFormButtonsClass\")}\n          >\n            {isAppInitiatedAction ? (\n              <>\n                <input\n                  className={clsx(\n                    getClassName(\"kcButtonClass\"),\n                    getClassName(\"kcButtonPrimaryClass\"),\n                    getClassName(\"kcButtonLargeClass\")\n                  )}\n                  type=\"submit\"\n                  value={msgStr(\"doSubmit\")}\n                />\n                <button\n                  className={clsx(\n                    getClassName(\"kcButtonClass\"),\n                    getClassName(\"kcButtonDefaultClass\"),\n                    getClassName(\"kcButtonLargeClass\")\n                  )}\n                  type=\"submit\"\n                  name=\"cancel-aia\"\n                  value=\"true\"\n                  formNoValidate\n                >\n                  {msg(\"doCancel\")}\n                </button>\n              </>\n            ) : (\n              <input\n                className={clsx(\n                  getClassName(\"kcButtonClass\"),\n                  getClassName(\"kcButtonPrimaryClass\"),\n                  getClassName(\"kcButtonBlockClass\"),\n                  getClassName(\"kcButtonLargeClass\")\n                )}\n                type=\"submit\"\n                defaultValue={msgStr(\"doSubmit\")}\n                disabled={!isFomSubmittable}\n              />\n            )}\n          </div>\n        </div>\n      </form>\n    </Template>\n  );\n}\n","import \"./KcApp.css\";\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\nimport UpdateUserProfile from \"./pages/UpdateUserProfile\";\n\nconst Template = lazy(() => import(\"./Template\"));\nconst DefaultTemplate = lazy(() => import(\"keycloakify/login/Template\"));\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    case \"info.ftl\": return <Info {...{ kcContext, i18n, classes }} Template={DefaultTemplate} doUseDefaultCss={true} />;\n                    case \"update-user-profile.ftl\": return <UpdateUserProfile {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n"],"names":["useI18n","createUseI18n","en","alphanumericalCharsOnly","gender","doForgotPassword","invalidUserMessage","fr","UpdateUserProfile","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","msg","msgStr","url","isAppInitiatedAction","_useState","useState","_useState2","_slicedToArray","isFomSubmittable","setIsFomSubmittable","console","log","profileAttributesWithoutEmail","profile","attributes","filter","obj","name","attributesByName","email","_jsx","headerNode","children","_jsxs","id","className","action","loginAction","method","UserProfileFormFields","onIsFormSubmittableValueChange","_Fragment","clsx","type","value","formNoValidate","defaultValue","disabled","lazy","DefaultTemplate","Login","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","KcApp","Suspense","pageId","Fallback"],"sourceRoot":""}