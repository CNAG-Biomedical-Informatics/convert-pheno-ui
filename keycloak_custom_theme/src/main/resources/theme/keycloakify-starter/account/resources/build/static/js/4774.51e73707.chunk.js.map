{"version":3,"file":"static/js/4774.51e73707.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/lib/useGetClassName.ts","../node_modules/keycloakify/src/login/pages/LoginConfigTotp.tsx","../node_modules/keycloakify/src/tools/clsx.ts","../node_modules/tsafe/src/typeGuard.ts"],"sourcesContent":["import { clsx } from \"keycloakify/tools/clsx\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\n\nexport function createUseClassName<ClassKey extends string>(params: { defaultClasses: Record<ClassKey, string | undefined> }) {\n    const { defaultClasses } = params;\n\n    function useGetClassName(params: { doUseDefaultCss: boolean; classes: Partial<Record<ClassKey, string>> | undefined }) {\n        const { classes } = params;\n\n        const getClassName = useConstCallback((classKey: ClassKey): string => {\n            return clsx(classKey, defaultClasses[classKey], classes?.[classKey]);\n        });\n\n        return { getClassName };\n    }\n\n    return { useGetClassName };\n}\n","import { createUseClassName } from \"keycloakify/lib/useGetClassName\";\nimport type { ClassKey } from \"keycloakify/login/TemplateProps\";\n\nexport const { useGetClassName } = createUseClassName<ClassKey>({\n    \"defaultClasses\": {\n        \"kcBodyClass\": undefined,\n        \"kcHtmlClass\": \"login-pf\",\n        \"kcLoginClass\": \"login-pf-page\",\n        \"kcContentWrapperClass\": \"row\",\n        \"kcHeaderClass\": \"login-pf-page-header\",\n        \"kcHeaderWrapperClass\": undefined,\n        \"kcFormCardClass\": \"card-pf\",\n        \"kcFormCardAccountClass\": \"login-pf-accounts\",\n        \"kcFormSocialAccountClass\": \"login-pf-social-section\",\n        \"kcFormSocialAccountContentClass\": \"col-xs-12 col-sm-6\",\n        \"kcFormHeaderClass\": \"login-pf-header\",\n        \"kcLocaleWrapperClass\": undefined,\n        \"kcFeedbackErrorIcon\": \"pficon pficon-error-circle-o\",\n        \"kcFeedbackWarningIcon\": \"pficon pficon-warning-triangle-o\",\n        \"kcFeedbackSuccessIcon\": \"pficon pficon-ok\",\n        \"kcFeedbackInfoIcon\": \"pficon pficon-info\",\n        \"kcResetFlowIcon\": \"pficon pficon-arrow fa-2x\",\n        \"kcFormGroupClass\": \"form-group\",\n        \"kcLabelWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcSignUpClass\": \"login-pf-signup\",\n        \"kcInfoAreaWrapperClass\": undefined,\n\n        \"kcLogoClass\": \"login-pf-brand\",\n        \"kcContainerClass\": \"container-fluid\",\n        \"kcContentClass\": \"col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-6 col-lg-offset-3\",\n        \"kcFeedbackAreaClass\": \"col-md-12\",\n        \"kcLocaleClass\": \"col-xs-12 col-sm-1\",\n        \"kcAlertIconClasserror\": \"pficon pficon-error-circle-o\",\n\n        \"kcFormAreaClass\": \"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2\",\n        \"kcFormSocialAccountListClass\": \"login-pf-social list-unstyled login-pf-social-all\",\n        \"kcFormSocialAccountDoubleListClass\": \"login-pf-social-double-col\",\n        \"kcFormSocialAccountListLinkClass\": \"login-pf-social-link\",\n        \"kcWebAuthnKeyIcon\": \"pficon pficon-key\",\n        \"kcWebAuthnDefaultIcon\": \"pficon pficon-key\",\n\n        \"kcFormClass\": \"form-horizontal\",\n        \"kcFormGroupErrorClass\": \"has-error\",\n        \"kcLabelClass\": \"control-label\",\n        \"kcInputClass\": \"form-control\",\n        \"kcInputErrorMessageClass\": \"pf-c-form__helper-text pf-m-error required kc-feedback-text\",\n        \"kcInputWrapperClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsWrapperClass\": undefined,\n        \"kcFormOptionsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormButtonsClass\": \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        \"kcFormSettingClass\": \"login-pf-settings\",\n        \"kcTextareaClass\": \"form-control\",\n\n        \"kcInfoAreaClass\": \"col-xs-12 col-sm-4 col-md-4 col-lg-5 details\",\n\n        // user-profile grouping\n        \"kcFormGroupHeader\": \"pf-c-form__group\",\n\n        // css classes for form buttons main class used for all buttons\n        \"kcButtonClass\": \"btn\",\n        // classes defining priority of the button - primary or default (there is typically only one priority button for the form)\n        \"kcButtonPrimaryClass\": \"btn-primary\",\n        \"kcButtonDefaultClass\": \"btn-default\",\n        // classes defining size of the button\n        \"kcButtonLargeClass\": \"btn-lg\",\n        \"kcButtonBlockClass\": \"btn-block\",\n\n        // css classes for input\n        \"kcInputLargeClass\": \"input-lg\",\n\n        // css classes for form accessability\n        \"kcSrOnlyClass\": \"sr-only\",\n\n        // css classes for select-authenticator form\n        \"kcSelectAuthListClass\": \"list-group list-view-pf\",\n        \"kcSelectAuthListItemClass\": \"list-group-item list-view-pf-stacked\",\n        \"kcSelectAuthListItemFillClass\": \"pf-l-split__item pf-m-fill\",\n        \"kcSelectAuthListItemIconPropertyClass\": \"fa-2x select-auth-box-icon-properties\",\n        \"kcSelectAuthListItemIconClass\": \"pf-l-split__item select-auth-box-icon\",\n        \"kcSelectAuthListItemTitle\": \"select-auth-box-paragraph\",\n        \"kcSelectAuthListItemInfoClass\": \"list-view-pf-main-info\",\n        \"kcSelectAuthListItemLeftClass\": \"list-view-pf-left\",\n        \"kcSelectAuthListItemBodyClass\": \"list-view-pf-body\",\n        \"kcSelectAuthListItemDescriptionClass\": \"list-view-pf-description\",\n        \"kcSelectAuthListItemHeadingClass\": \"list-group-item-heading\",\n        \"kcSelectAuthListItemHelpTextClass\": \"list-group-item-text\",\n\n        // css classes for the authenticators\n        \"kcAuthenticatorDefaultClass\": \"fa list-view-pf-icon-lg\",\n        \"kcAuthenticatorPasswordClass\": \"fa fa-unlock list-view-pf-icon-lg\",\n        \"kcAuthenticatorOTPClass\": \"fa fa-mobile list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnClass\": \"fa fa-key list-view-pf-icon-lg\",\n        \"kcAuthenticatorWebAuthnPasswordlessClass\": \"fa fa-key list-view-pf-icon-lg\",\n\n        //css classes for the OTP Login Form\n        \"kcSelectOTPListClass\": \"card-pf card-pf-view card-pf-view-select card-pf-view-single-select\",\n        \"kcSelectOTPListItemClass\": \"card-pf-body card-pf-top-element\",\n        \"kcAuthenticatorOtpCircleClass\": \"fa fa-mobile card-pf-icon-circle\",\n        \"kcSelectOTPItemHeadingClass\": \"card-pf-title text-center\",\n        \"kcFormOptionsWrapperClass\": undefined\n    }\n});\n","import { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport { MessageKey } from \"keycloakify/login/i18n/i18n\";\n\nexport default function LoginConfigTotp(props: PageProps<Extract<KcContext, { pageId: \"login-config-totp.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, isAppInitiatedAction, totp, mode, messagesPerField } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    const algToKeyUriAlg: Record<(typeof kcContext)[\"totp\"][\"policy\"][\"algorithm\"], string> = {\n        \"HmacSHA1\": \"SHA1\",\n        \"HmacSHA256\": \"SHA256\",\n        \"HmacSHA512\": \"SHA512\"\n    };\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"loginTotpTitle\")}>\n            <>\n                <ol id=\"kc-totp-settings\">\n                    <li>\n                        <p>{msg(\"loginTotpStep1\")}</p>\n\n                        <ul id=\"kc-totp-supported-apps\">\n                            {totp.supportedApplications.map(app => (\n                                <li>{msg(app as MessageKey)}</li>\n                            ))}\n                        </ul>\n                    </li>\n\n                    {mode && mode == \"manual\" ? (\n                        <>\n                            <li>\n                                <p>{msg(\"loginTotpManualStep2\")}</p>\n                                <p>\n                                    <span id=\"kc-totp-secret-key\">{totp.totpSecretEncoded}</span>\n                                </p>\n                                <p>\n                                    <a href={totp.qrUrl} id=\"mode-barcode\">\n                                        {msg(\"loginTotpScanBarcode\")}\n                                    </a>\n                                </p>\n                            </li>\n                            <li>\n                                <p>{msg(\"loginTotpManualStep3\")}</p>\n                                <p>\n                                    <ul>\n                                        <li id=\"kc-totp-type\">\n                                            {msg(\"loginTotpType\")}: {msg(`loginTotp.${totp.policy.type}`)}\n                                        </li>\n                                        <li id=\"kc-totp-algorithm\">\n                                            {msg(\"loginTotpAlgorithm\")}: {algToKeyUriAlg?.[totp.policy.algorithm] ?? totp.policy.algorithm}\n                                        </li>\n                                        <li id=\"kc-totp-digits\">\n                                            {msg(\"loginTotpDigits\")}: {totp.policy.digits}\n                                        </li>\n                                        {totp.policy.type === \"totp\" ? (\n                                            <li id=\"kc-totp-period\">\n                                                {msg(\"loginTotpInterval\")}: {totp.policy.period}\n                                            </li>\n                                        ) : (\n                                            <li id=\"kc-totp-counter\">\n                                                {msg(\"loginTotpCounter\")}: {totp.policy.initialCounter}\n                                            </li>\n                                        )}\n                                    </ul>\n                                </p>\n                            </li>\n                        </>\n                    ) : (\n                        <li>\n                            <p>{msg(\"loginTotpStep2\")}</p>\n                            <img id=\"kc-totp-secret-qr-code\" src={`data:image/png;base64, ${totp.totpSecretQrCode}`} alt=\"Figure: Barcode\" />\n                            <br />\n                            <p>\n                                <a href={totp.manualUrl} id=\"mode-manual\">\n                                    {msg(\"loginTotpUnableToScan\")}\n                                </a>\n                            </p>\n                        </li>\n                    )}\n                    <li>\n                        <p>{msg(\"loginTotpStep3\")}</p>\n                        <p>{msg(\"loginTotpStep3DeviceName\")}</p>\n                    </li>\n                </ol>\n\n                <form action={url.loginAction} className={getClassName(\"kcFormClass\")} id=\"kc-totp-settings-form\" method=\"post\">\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <label htmlFor=\"totp\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"authenticatorCode\")}\n                            </label>{\" \"}\n                            <span className=\"required\">*</span>\n                        </div>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <input\n                                type=\"text\"\n                                id=\"totp\"\n                                name=\"totp\"\n                                autoComplete=\"off\"\n                                className={getClassName(\"kcInputClass\")}\n                                aria-invalid={messagesPerField.existsError(\"totp\")}\n                            />\n\n                            {messagesPerField.existsError(\"totp\") && (\n                                <span id=\"input-error-otp-code\" className={getClassName(\"kcInputErrorMessageClass\")} aria-live=\"polite\">\n                                    {messagesPerField.get(\"totp\")}\n                                </span>\n                            )}\n                        </div>\n                        <input type=\"hidden\" id=\"totpSecret\" name=\"totpSecret\" value={totp.totpSecret} />\n                        {mode && <input type=\"hidden\" id=\"mode\" value={mode} />}\n                    </div>\n\n                    <div className={getClassName(\"kcFormGroupClass\")}>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <label htmlFor=\"userLabel\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"loginTotpDeviceName\")}\n                            </label>{\" \"}\n                            {totp.otpCredentials.length >= 1 && <span className=\"required\">*</span>}\n                        </div>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <input\n                                type=\"text\"\n                                id=\"userLabel\"\n                                name=\"userLabel\"\n                                autoComplete=\"off\"\n                                className={getClassName(\"kcInputClass\")}\n                                aria-invalid={messagesPerField.existsError(\"userLabel\")}\n                            />\n                            {messagesPerField.existsError(\"userLabel\") && (\n                                <span id=\"input-error-otp-label\" className={getClassName(\"kcInputErrorMessageClass\")} aria-live=\"polite\">\n                                    {messagesPerField.get(\"userLabel\")}\n                                </span>\n                            )}\n                        </div>\n                    </div>\n\n                    {isAppInitiatedAction ? (\n                        <>\n                            <input\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonPrimaryClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                id=\"saveTOTPBtn\"\n                                value={msgStr(\"doSubmit\")}\n                            />\n                            <button\n                                type=\"submit\"\n                                className={clsx(\n                                    getClassName(\"kcButtonClass\"),\n                                    getClassName(\"kcButtonDefaultClass\"),\n                                    getClassName(\"kcButtonLargeClass\"),\n                                    getClassName(\"kcButtonLargeClass\")\n                                )}\n                                id=\"cancelTOTPBtn\"\n                                name=\"cancel-aia\"\n                                value=\"true\"\n                            >\n                                {msg(\"doCancel\")}\n                            </button>\n                        </>\n                    ) : (\n                        <input\n                            type=\"submit\"\n                            className={clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\"))}\n                            id=\"saveTOTPBtn\"\n                            value={msgStr(\"doSubmit\")}\n                        />\n                    )}\n                </form>\n            </>\n        </Template>\n    );\n}\n","import { assert } from \"tsafe/assert\";\nimport { typeGuard } from \"tsafe/typeGuard\";\n\nexport type CxArg = undefined | null | string | boolean | Partial<Record<string, boolean | null | undefined>> | readonly CxArg[];\n\nexport const clsx = (...args: CxArg[]): string => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null) continue;\n\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = clsx(...arg);\n                } else {\n                    assert(!typeGuard<{ length: number }>(arg, false));\n\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k as string] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard<T>(_value: any, isMatched: boolean): _value is T {\n    return isMatched;\n}\n"],"names":["createUseClassName","params","defaultClasses","useGetClassName","classes","getClassName","useConstCallback","classKey","clsx","undefined","LoginConfigTotp","props","kcContext","i18n","doUseDefaultCss","Template","url","isAppInitiatedAction","totp","mode","messagesPerField","msg","msgStr","algToKeyUriAlg","_jsx","Object","assign","headerNode","children","_jsxs","_Fragment","id","supportedApplications","map","app","totpSecretEncoded","href","qrUrl","concat","policy","type","_a","algorithm","digits","period","initialCounter","src","totpSecretQrCode","alt","manualUrl","action","loginAction","className","method","htmlFor","name","autoComplete","existsError","get","value","totpSecret","otpCredentials","length","len","arguments","i","cls","arg","toAdd","Array","isArray","apply","_toConsumableArray","k","assert","typeGuard","_value","isMatched"],"sourceRoot":""}