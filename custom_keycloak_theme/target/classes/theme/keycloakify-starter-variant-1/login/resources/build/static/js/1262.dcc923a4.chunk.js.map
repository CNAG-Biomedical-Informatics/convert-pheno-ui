{"version":3,"file":"static/js/1262.dcc923a4.chunk.js","mappings":"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","sources":["keycloak-theme/login/i18n.ts","keycloak-theme/login/KcApp.tsx"],"sourcesContent":["import { createUseI18n } from \"keycloakify/login\";\n\nexport const { useI18n } = createUseI18n({\n    // NOTE: Here you can override the default i18n messages\n    // or define new ones that, for example, you would have\n    // defined in the Keycloak admin UI for UserProfile\n    // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n    en: {\n        alphanumericalCharsOnly: \"Only alphanumerical characters\",\n        gender: \"Gender\",\n        // Here we overwrite the default english value for the message \"doForgotPassword\"\n        // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n        doForgotPassword: \"I forgot my password\",\n        invalidUserMessage: \"Invalid username or password. (this message was overwrite in the theme)\"\n    },\n    fr: {\n        /* spell-checker: disable */\n        alphanumericalCharsOnly: \"Caractère alphanumérique uniquement\",\n        gender: \"Genre\",\n        doForgotPassword: \"J'ai oublié mon mot de passe\",\n        invalidUserMessage: \"Nom d'utilisateur ou mot de passe invalide. (ce message a été écrasé dans le thème)\"\n        /* spell-checker: enable */\n    }\n});\n\nexport type I18n = NonNullable<ReturnType<typeof useI18n>>;\n","import \"./KcApp.css\";\nimport { lazy, Suspense } from \"react\";\nimport Fallback, { type PageProps } from \"keycloakify/login\";\nimport type { KcContext } from \"./kcContext\";\nimport { useI18n } from \"./i18n\";\n\nconst Template = lazy(() => import(\"./Template\"));\nconst DefaultTemplate = lazy(() => import(\"keycloakify/login/Template\"));\n\nconst Login = lazy(() => import(\"./pages/Login\"));\n// If you can, favor register-user-profile.ftl over register.ftl, see: https://docs.keycloakify.dev/realtime-input-validation\nconst Register = lazy(() => import(\"./pages/Register\"));\nconst RegisterUserProfile = lazy(() => import(\"./pages/RegisterUserProfile\"));\nconst Terms = lazy(() => import(\"./pages/Terms\"));\nconst MyExtraPage1 = lazy(() => import(\"./pages/MyExtraPage1\"));\nconst MyExtraPage2 = lazy(() => import(\"./pages/MyExtraPage2\"));\nconst Info = lazy(() => import(\"keycloakify/login/pages/Info\"));\nconst UpdateUserProfile = lazy(() => import(\"./pages/UpdateUserProfile\"));\nconst LoginUpdateProfile = lazy(() => import(\"./pages/LoginUpdateProfile\"));\nconst IdpReviewUserProfile = lazy(() => import(\"./pages/IdpReviewUserProfile\"));\n\n// This is like adding classes to theme.properties \n// https://github.com/keycloak/keycloak/blob/11.0.3/themes/src/main/resources/theme/keycloak/login/theme.properties\nconst classes: PageProps<any, any>[\"classes\"] = {\n    // NOTE: The classes are defined in ./KcApp.css\n    \"kcHtmlClass\": \"my-root-class\",\n    \"kcHeaderWrapperClass\": \"my-color my-font\"\n};\n\nexport default function KcApp(props: { kcContext: KcContext; }) {\n\n    const { kcContext } = props;\n\n    const i18n = useI18n({ kcContext });\n\n    if (i18n === null) {\n        //NOTE: Text resources for the current language are still being downloaded, we can't display anything yet.\n        //We could display a loading progress but it's usually a matter of milliseconds.\n        return null;\n    }\n\n    /* \n    * Examples assuming i18n.currentLanguageTag === \"en\":\n    * i18n.msg(\"access-denied\") === <span>Access denied</span>\n    * i18n.msg(\"foo\") === <span>foo in English</span>\n    */\n\n    return (\n        <Suspense>\n            {(() => {\n                switch (kcContext.pageId) {\n                    case \"login.ftl\": return <Login {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register.ftl\": return <Register {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"register-user-profile.ftl\": return <RegisterUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />\n                    case \"terms.ftl\": return <Terms {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-1.ftl\": return <MyExtraPage1 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"my-extra-page-2.ftl\": return <MyExtraPage2 {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    // We choose to use the default Template for the Info page and to download the theme resources.\n                    case \"info.ftl\": return <Info {...{ kcContext, i18n, classes }} Template={DefaultTemplate} doUseDefaultCss={true} />;\n                    case \"update-user-profile.ftl\": return <UpdateUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"login-update-profile.ftl\": return <LoginUpdateProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    case \"idp-review-user-profile.ftl\": return <IdpReviewUserProfile {...{ kcContext, i18n, Template, classes }} doUseDefaultCss={true} />;\n                    default: return <Fallback {...{ kcContext, i18n, classes }} Template={Template} doUseDefaultCss={true} />;\n                }\n            })()}\n        </Suspense>\n    );\n\n}\n"],"names":["useI18n","createUseI18n","en","alphanumericalCharsOnly","gender","doForgotPassword","invalidUserMessage","fr","Template","lazy","DefaultTemplate","Login","Register","RegisterUserProfile","Terms","MyExtraPage1","MyExtraPage2","Info","UpdateUserProfile","LoginUpdateProfile","IdpReviewUserProfile","classes","KcApp","props","kcContext","i18n","_jsx","Suspense","children","pageId","doUseDefaultCss","Fallback"],"sourceRoot":""}