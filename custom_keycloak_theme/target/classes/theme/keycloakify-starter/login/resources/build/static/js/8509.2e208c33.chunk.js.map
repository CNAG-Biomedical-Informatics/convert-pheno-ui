{"version":3,"file":"static/js/8509.2e208c33.chunk.js","mappings":"2OAQc,SAAUA,EAAoBC,GACxC,IAAQC,EAAwDD,EAAxDC,UAAWC,EAA6CF,EAA7CE,KAAMC,EAAuCH,EAAvCG,gBAAiBC,EAAsBJ,EAAtBI,SAAUC,EAAYL,EAAZK,QAE5CC,GAAiBC,EAAAA,EAAAA,GAAgB,CACrCJ,gBAAAA,EACAE,QAAAA,IAFIC,aAKAE,EAAsEP,EAAtEO,IAAKC,EAAiER,EAAjEQ,iBAAkBC,EAA+CT,EAA/CS,kBAAmBC,EAA4BV,EAA5BU,iBAA4BV,EAAVW,MAE9DC,4BAEN,IAAQC,EAAgBZ,EAAhBY,IAAKC,EAAWb,EAAXa,OAEbC,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GAE9C,OACII,EAAAA,EAAAA,KAAClB,EAAQmB,OAAAC,OAAA,GACD,CAAEvB,UAAAA,EAAWC,KAAAA,EAAMC,gBAAAA,EAAiBE,QAAAA,GAAS,CACjDoB,eAAgBhB,EAAiBiB,OAAO,UACxCC,uBAAuB,EACvBC,WAAYd,EAAI,kBAAgB,CAAAe,UAEhCC,EAAAA,EAAAA,MAAA,OAAAP,OAAAC,OAAA,CAAMO,GAAG,mBAAmBC,UAAW1B,EAAa,eAAgB2B,OAAQzB,EAAI0B,mBAAoBC,OAAO,QAAM,CAAAN,SAAA,EAC7GP,EAAAA,EAAAA,KAACc,EAAAA,EAAqB,CAClBnC,UAAWA,EACXoC,+BAAgChB,EAChCnB,KAAMA,EACNI,aAAcA,IAEjBI,IACGY,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKQ,UAAU,cAAY,CAAAH,UACvBP,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKQ,UAAW1B,EAAa,wBAAsB,CAAAuB,UAC/CP,EAAAA,EAAAA,KAAA,OAAKU,UAAU,cAAa,YAAW,UAAS,eAAerB,WAI3EmB,EAAAA,EAAAA,MAAA,MAAAP,OAAAC,OAAA,CAAKQ,UAAW1B,EAAa,oBAAqBgC,MAAO,CAAE,aAAgB,KAAI,CAAAT,SAAA,EAC3EP,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKO,GAAG,kBAAkBC,UAAW1B,EAAa,uBAAqB,CAAAuB,UACnEP,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKQ,UAAW1B,EAAa,8BAA4B,CAAAuB,UACrDP,EAAAA,EAAAA,KAAA,QAAAO,UACIP,EAAAA,EAAAA,KAAA,IAAAC,OAAAC,OAAA,CAAGe,KAAM/B,EAAIgC,UAAQ,CAAAX,SAAGf,EAAI,2BAKxCQ,EAAAA,EAAAA,KAAA,MAAAC,OAAAC,OAAA,CAAKO,GAAG,kBAAkBC,UAAW1B,EAAa,uBAAqB,CAAAuB,UACnEP,EAAAA,EAAAA,KAAA,SACIU,WAAWS,EAAAA,EAAAA,GACPnC,EAAa,iBACbA,EAAa,wBACbA,EAAa,sBACbA,EAAa,uBAEjBoC,KAAK,SACLC,MAAO5B,EAAO,cACd6B,UAAWxB,iBAOvC,C","sources":["../node_modules/keycloakify/src/login/pages/RegisterUserProfile.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { UserProfileFormFields } from \"./shared/UserProfileFormFields\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function RegisterUserProfile(props: PageProps<Extract<KcContext, { pageId: \"register-user-profile.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, messagesPerField, recaptchaRequired, recaptchaSiteKey, realm } = kcContext;\n\n    realm.registrationEmailAsUsername;\n\n    const { msg, msgStr } = i18n;\n\n    const [isFormSubmittable, setIsFormSubmittable] = useState(false);\n\n    return (\n        <Template\n            {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            displayMessage={messagesPerField.exists(\"global\")}\n            displayRequiredFields={true}\n            headerNode={msg(\"registerTitle\")}\n        >\n            <form id=\"kc-register-form\" className={getClassName(\"kcFormClass\")} action={url.registrationAction} method=\"post\">\n                <UserProfileFormFields\n                    kcContext={kcContext}\n                    onIsFormSubmittableValueChange={setIsFormSubmittable}\n                    i18n={i18n}\n                    getClassName={getClassName}\n                />\n                {recaptchaRequired && (\n                    <div className=\"form-group\">\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey} />\n                        </div>\n                    </div>\n                )}\n                <div className={getClassName(\"kcFormGroupClass\")} style={{ \"marginBottom\": 30 }}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        <input\n                            className={clsx(\n                                getClassName(\"kcButtonClass\"),\n                                getClassName(\"kcButtonPrimaryClass\"),\n                                getClassName(\"kcButtonBlockClass\"),\n                                getClassName(\"kcButtonLargeClass\")\n                            )}\n                            type=\"submit\"\n                            value={msgStr(\"doRegister\")}\n                            disabled={!isFormSubmittable}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["RegisterUserProfile","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","url","messagesPerField","recaptchaRequired","recaptchaSiteKey","realm","registrationEmailAsUsername","msg","msgStr","_useState","useState","_useState2","_slicedToArray","isFormSubmittable","setIsFormSubmittable","_jsx","Object","assign","displayMessage","exists","displayRequiredFields","headerNode","children","_jsxs","id","className","action","registrationAction","method","UserProfileFormFields","onIsFormSubmittableValueChange","style","href","loginUrl","clsx","type","value","disabled"],"sourceRoot":""}